name: Release Build

on:
  push:
    tags:
      - 'v*'  # Trigger only on tags starting with "v"

jobs:
  build-android:
    name: Build Android APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.x'
          channel: stable

      - name: Install dependencies
        run: flutter pub get

      - name: Build APK (Release)
        run: flutter build apk --release --split-per-abi

      - name: Upload Android APK artifact
        uses: actions/upload-artifact@v3
        with:
          name: android-apks
          path: build/app/outputs/apk/release/*.apk

  build-macos:
    name: Build macOS app
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.x'
          channel: stable

      - name: Install dependencies
        run: flutter pub get

      - name: Enable macOS Desktop
        run: flutter config --enable-macos-desktop

      - name: Build macOS (Release)
        run: flutter build macos --release

      - name: Upload macOS artifact
        uses: actions/upload-artifact@v3
        with:
          name: macos-app
          path: build/macos/Build/Products/Release/*.app

  build-linux:
    name: Build Linux app
    runs-on: ubuntu-latest

    steps:
      - name: Install Linux build dependencies
        run: sudo apt-get update && sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev fakeroot dpkg

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.x'
          channel: stable

      - name: Install dependencies
        run: flutter pub get

      - name: Enable Linux Desktop
        run: flutter config --enable-linux-desktop

      - name: Build Linux (Release)
        run: flutter build linux --release

      # Optional: Build .deb package if you have a packaging script
      # - name: Build .deb package
      #   run: |
      #     ./scripts/build_deb.sh   # Your script to create .deb in a known path

      - name: Upload Linux artifacts (include .deb if generated)
        uses: actions/upload-artifact@v3
        with:
          name: linux-app
          path: |
            build/linux/x64/release/bundle/*
            # uncomment below if you build .deb and path is known
            # path/to/your/package.deb

  upload-release:
    name: Upload all artifacts to GitHub Release
    needs:
      - build-android
      - build-macos
      - build-linux
    runs-on: ubuntu-latest

    steps:
      - name: Download Android APK artifact
        uses: actions/download-artifact@v3
        with:
          name: android-apks
          path: ./artifacts/android

      - name: Download macOS artifact
        uses: actions/download-artifact@v3
        with:
          name: macos-app
          path: ./artifacts/macos

      - name: Download Linux artifact
        uses: actions/download-artifact@v3
        with:
          name: linux-app
          path: ./artifacts/linux

      - name: List all downloaded artifacts (for debug)
        run: ls -R ./artifacts

      - name: Upload all artifacts to GitHub Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: |
            ./artifacts/android/*.apk
            ./artifacts/macos/*.app
            ./artifacts/linux/*  # will include .deb if present
          token: ${{ secrets.SECRET_TOKEN }}
          tag: ${{ github.ref_name }}
          allowUpdates: true
          generateReleaseNotes: true
