name: Release Build

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  changelog:
    runs-on: ubuntu-latest
    outputs:
      release_body: ${{ steps.git-cliff.outputs.content }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Generate changelog
        uses: orhun/git-cliff-action@v2
        id: git-cliff
        with:
          config: cliff.toml
          args: -vv --latest --strip header
        env:
          OUTPUT: CHANGES.md

  build-android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.0'
          channel: 'stable'
      - run: flutter pub get
      - run: flutter build apk --release
      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: android-release
          path: build/app/outputs/flutter-apk/app-release.apk

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.0'
          channel: 'stable'
      - run: flutter config --enable-windows-desktop
      - run: flutter pub get
      - run: flutter build windows --release
      - name: Create Release Zip
        run: |
          Compress-Archive -Path build/windows/runner/Release/* -DestinationPath windows-release.zip
      - name: Upload Windows Build
        uses: actions/upload-artifact@v3
        with:
          name: windows-release
          path: windows-release.zip

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.0'
          channel: 'stable'
      - name: Install macOS dependencies
        run: |
          brew install create-dmg
      - run: flutter config --enable-macos-desktop
      - run: flutter pub get
      - run: flutter build macos --release
      - name: Create DMG
        run: |
          cd build/macos/Build/Products/Release
          create-dmg \
            --volname "RoktoDan" \
            --window-pos 200 120 \
            --window-size 800 400 \
            --icon-size 100 \
            --icon "roktodan.app" 200 190 \
            --hide-extension "roktodan.app" \
            --app-drop-link 600 185 \
            "../../../../RoktoDan-Installer.dmg" \
            "roktodan.app/"
      - name: Upload macOS Build
        uses: actions/upload-artifact@v3
        with:
          name: macos-release
          path: build/RoktoDan-Installer.dmg
      - name: Upload macOS Build
        uses: actions/upload-artifact@v3
        with:
          name: macos-release
          path: build/macos-release.zip

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build libgtk-3-dev libblkid-dev libsecret-1-dev libolm-dev libappindicator3-dev
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.0'
          channel: 'stable'
      - run: flutter config --enable-linux-desktop
      - run: flutter pub get
      - run: flutter build linux --release
      - name: Create Release Tar
        run: |
          cd build/linux/x64/release/bundle
          tar czf ../../../../../linux-release.tar.gz *
      - name: Upload Linux Build
        uses: actions/upload-artifact@v3
        with:
          name: linux-release
          path: linux-release.tar.gz

  create-release:
    needs: [changelog, build-android, build-windows, build-macos, build-linux]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: releases
      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      - name: Create Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.SECRET_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ steps.get_version.outputs.VERSION }}
          body: ${{ needs.changelog.outputs.release_body }}
          files: |
            releases/android-release/app-release.apk
            releases/windows-release/windows-release.zip
            releases/macos-release/RoktoDan-Installer.dmg
            releases/linux-release/linux-release.tar.gz
          draft: false
          prerelease: false
